<!DOCTYPE html>
<html lang="en" class="light-style layout-menu-fixed" data-assets-path="" data-base-url="" data-framework="django" data-template="vertical-menu-free">

<head>
    <style>
        body {
            background-color: #e8f5e9;
            font-family: Arial, sans-serif;
        }
        .form-container {
            max-width: 100%;
            margin: auto;
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .form-header {
            font-size: 20px;
            font-weight: bold;
            color: #2e7d32;
            margin-bottom: 10px;
        }
        .question-box {
            border: 2px solid #a5d6a7;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 10px;
        }
        .btn-primary { background-color: #388e3c; border: none; }
        .btn-primary:hover { background-color: #2e7d32; }
    </style>
    <%- include('includes/head.ejs') %>
</head>

<body>
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <%- include('includes/sidebar.ejs') %>
            <div class="layout-page">
                <%- include('includes/header.ejs') %>
                <div class="content-wrapper">
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <div class="mt-5">
                            <div class="form-container">
                                <div class="form-header mb-8">✏️ Form Title: <%= form.name %> </div>
                                <form action="/form/submit/<%= form.id %>" method="POST">
                                    <div id="formFields"></div>
                                    <button type="button" class="btn btn-primary w-100 mt-2" onclick="addQuestion()">Add Question +</button>
                                    <button type="submit" class="btn btn-success w-100 mt-3">Save Form</button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="content-backdrop fade"></div>
                </div>
                <%- include('includes/footer.ejs') %>
            </div>
        </div>
        <div class="layout-overlay layout-menu-toggle"></div>
        <div class="drag-target"></div>
    </div>
    
    <script>
        let questionIndex = 0; // Track question count

        function addQuestion() {
            const formFields = document.getElementById("formFields");
            const fieldIndex = questionIndex++; // Unique index per question

            const questionDiv = document.createElement("div");
            questionDiv.classList.add("question-box");
            questionDiv.innerHTML = `
                <label>Question:</label>
                <input type="text" name="questions[]" class="form-control mb-2" required>
                <label>Answer Type:</label>
                <select name="types[]" class="form-select" onchange="handleTypeChange(this, ${fieldIndex})">
                    <option value="text">Short Answer</option>
                    <option value="textarea">Paragraph</option>
                    <option value="radio">Multiple Choice</option>
                    <option value="checkbox">Checkboxes</option>
                    <option value="select">Dropdown</option>
                    <option value="scale">Linear Scale</option>
                    <option value="rating">Rating (Stars)</option>
                    <option value="date">Date</option>
                    <option value="time">Time</option>
                    <option value="grid">Tick Box Grid</option>
                </select>
                <div id="options-container-${fieldIndex}" class="mt-2"></div>
                <button type="button" class="btn btn-danger btn-sm mt-2" onclick="this.parentElement.remove()">Delete</button>
            `;
            formFields.appendChild(questionDiv);
        }

        function handleTypeChange(select, fieldIndex) {
            const optionsContainer = document.getElementById(`options-container-${fieldIndex}`);
            optionsContainer.innerHTML = "";

            if (["radio", "checkbox", "select"].includes(select.value)) {
                const optionList = document.createElement("div");
                optionList.id = `option-list-${fieldIndex}`;
                optionsContainer.appendChild(optionList);

                const addOptionBtn = document.createElement("button");
                addOptionBtn.type = "button";
                addOptionBtn.classList.add("btn", "btn-secondary", "btn-sm", "mt-2");
                addOptionBtn.textContent = "Add Option";
                addOptionBtn.onclick = () => addOption(fieldIndex);
                optionsContainer.appendChild(addOptionBtn);
            } else if (select.value === "scale") {
                optionsContainer.innerHTML = `
                    <label>Scale Range:</label>
                    <input type="number" name="scale_min[]" class="form-control me-2" placeholder="Min value" required>
                    <input type="number" name="scale_max[]" class="form-control mt-2" placeholder="Max value" required>
                `;
            } else if (select.value === "rating") {
                optionsContainer.innerHTML = `
                    <label>Max Stars:</label>
                    <input type="number" name="rating_max[]" class="form-control" min="1" max="10" value="5" required>
                `;
            } else if (select.value === "date") {
                optionsContainer.innerHTML = `<input type="date" name="date[]" class="form-control" required>`;
            } else if (select.value === "time") {
                optionsContainer.innerHTML = `<input type="time" name="time[]" class="form-control" required>`;
            } else if (select.value === "grid") {
                optionsContainer.innerHTML = `
                    <label>Rows (comma-separated):</label>
                    <input type="text" name="grid_rows[]" class="form-control" placeholder="Row 1, Row 2" required>
                    <label>Columns (comma-separated):</label>
                    <input type="text" name="grid_columns[]" class="form-control" placeholder="Column 1, Column 2" required>
                `;
            }
        }

        function addOption(fieldIndex) {
            const optionList = document.getElementById(`option-list-${fieldIndex}`);

            const optionDiv = document.createElement("div");
            optionDiv.classList.add("d-flex", "align-items-center", "mt-2");
            optionDiv.innerHTML = `
                <input type="text" name="options[${fieldIndex}][]" class="form-control me-2" placeholder="Option value" required>
                <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">X</button>
            `;
            optionList.appendChild(optionDiv);
        }
    </script>

    <%- include('includes/scripts.ejs') %>
</body>
</html>
